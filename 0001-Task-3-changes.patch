From 70142d00ad80753fa513e131db857e19e3c13f75 Mon Sep 17 00:00:00 2001
From: roberttumaliuan <roberttumaliuan@DESKTOP-J3E0GFN.localdomain>
Date: Mon, 28 Aug 2023 13:53:32 -0500
Subject: [PATCH] Task 3 changes

---
 0001-.patch            | 213 +++++++++++++++++++++++++++++++++++++++++
 src/DataManipulator.ts |  20 ++--
 src/Graph.tsx          |  34 +++----
 3 files changed, 240 insertions(+), 27 deletions(-)
 create mode 100644 0001-.patch
diff --git a/0001-.patch b/0001-.patch
new file mode 100644
index 0000000..48cfa38
--- /dev/null
+++ b/0001-.patch
@@ -0,0 +1,213 @@
+From 3da239f01839b26b7442817f09473144eec774c9 Mon Sep 17 00:00:00 2001
+From: roberttumaliuan <roberttumaliuan@DESKTOP-J3E0GFN.localdomain>
+Date: Sun, 27 Aug 2023 19:10:31 -0500
+Subject: [PATCH]
+
+---
+ .idea/.gitignore                              |  3 ++
+ .idea/forage-jpmc-swe-task-3.iml              | 14 ++++++++
+ .../inspectionProfiles/profiles_settings.xml  |  6 ++++
+ .idea/misc.xml                                |  4 +++
+ .idea/modules.xml                             |  8 +++++
+ .idea/vcs.xml                                 |  6 ++++
+ src/DataManipulator.ts                        | 32 +++++++++++++------
+ src/Graph.tsx                                 | 32 +++++++++++--------
+ 8 files changed, 81 insertions(+), 24 deletions(-)
+ create mode 100644 .idea/.gitignore
+ create mode 100644 .idea/forage-jpmc-swe-task-3.iml
+ create mode 100644 .idea/inspectionProfiles/profiles_settings.xml
+ create mode 100644 .idea/misc.xml
+ create mode 100644 .idea/modules.xml
+ create mode 100644 .idea/vcs.xml
+
+diff --git a/.idea/.gitignore b/.idea/.gitignore
+new file mode 100644
+index 0000000..eaf91e2
+--- /dev/null
++++ b/.idea/.gitignore
+@@ -0,0 +1,3 @@
++# Default ignored files
++/shelf/
++/workspace.xml
+diff --git a/.idea/forage-jpmc-swe-task-3.iml b/.idea/forage-jpmc-swe-task-3.iml
+new file mode 100644
+index 0000000..c2ea36a
+--- /dev/null
++++ b/.idea/forage-jpmc-swe-task-3.iml
+@@ -0,0 +1,14 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<module type="PYTHON_MODULE" version="4">
++  <component name="NewModuleRootManager">
++    <content url="file://$MODULE_DIR$">
++      <excludeFolder url="file://$MODULE_DIR$/venv" />
++    </content>
++    <orderEntry type="inheritedJdk" />
++    <orderEntry type="sourceFolder" forTests="false" />
++  </component>
++  <component name="PyDocumentationSettings">
++    <option name="format" value="PLAIN" />
++    <option name="myDocStringFormat" value="Plain" />
++  </component>
++</module>
+\ No newline at end of file
+diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
+new file mode 100644
+index 0000000..105ce2d
+--- /dev/null
++++ b/.idea/inspectionProfiles/profiles_settings.xml
+@@ -0,0 +1,6 @@
++<component name="InspectionProjectProfileManager">
++  <settings>
++    <option name="USE_PROJECT_PROFILE" value="false" />
++    <version value="1.0" />
++  </settings>
++</component>
+\ No newline at end of file
+diff --git a/.idea/misc.xml b/.idea/misc.xml
+new file mode 100644
+index 0000000..abf7b39
+--- /dev/null
++++ b/.idea/misc.xml
+@@ -0,0 +1,4 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7" project-jdk-type="Python SDK" />
++</project>
+\ No newline at end of file
+diff --git a/.idea/modules.xml b/.idea/modules.xml
+new file mode 100644
+index 0000000..8f2bb5d
+--- /dev/null
++++ b/.idea/modules.xml
+@@ -0,0 +1,8 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="ProjectModuleManager">
++    <modules>
++      <module fileurl="file://$PROJECT_DIR$/.idea/forage-jpmc-swe-task-3.iml" filepath="$PROJECT_DIR$/.idea/forage-jpmc-swe-task-3.iml" />
++    </modules>
++  </component>
++</project>
+\ No newline at end of file
+diff --git a/.idea/vcs.xml b/.idea/vcs.xml
+new file mode 100644
+index 0000000..c8397c9
+--- /dev/null
++++ b/.idea/vcs.xml
+@@ -0,0 +1,6 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="VcsDirectoryMappings">
++    <mapping directory="" vcs="Git" />
++  </component>
++</project>
+\ No newline at end of file
+diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
+index 7f62295..5b7bf6c 100644
+--- a/src/DataManipulator.ts
++++ b/src/DataManipulator.ts
+@@ -1,20 +1,32 @@
+ import { ServerRespond } from './DataStreamer';
+ 
+ export interface Row {
+-  stock: string,
+-  top_ask_price: number,
++  price_abc: number,
++  price_def: number,
++  ratio: number,
+   timestamp: Date,
++  upper_bound: number,
++  lower_bound: number,
++  trigger_alert: number | undefined,
+ }
+ 
+ 
+ export class DataManipulator {
+-  static generateRow(serverResponds: ServerRespond[]) {
+-    return serverResponds.map((el: any) => {
+-      return {
+-        stock: el.stock,
+-        top_ask_price: el.top_ask && el.top_ask.price || 0,
+-        timestamp: el.timestamp,
+-      };
+-    })
++  static generateRow(serverRespond: ServerRespond[]): Row {
++    const priceABC = (serverRespond[0].top_ask.price + serverRespond[0].top_bid.price) / 2;
++    const priceDEF = (serverRespond[1].top_ask.price + serverRespond[1].top_bid.price) / 2;
++    const ratio = priceABC / priceDEF;
++    const upperBound = 1 + 0.10;
++    const lowerBound = 1 - 0.10;
++    return {
++      price_abc: priceABC,
++      price_def: priceDEF,
++      ratio,
++      timestamp: serverRespond[0].timestamp > serverRespond[1].timestamp ?
++        serverRespond[0].timestamp : serverRespond[1].timestamp,
++      upper_bound: upperBound,
++      lower_bound: lowerBound,
++      trigger_alert: (ratio > upperBound || ratio < lowerBound) ? ratio : undefined,
++    };
+   }
+ }
+diff --git a/src/Graph.tsx b/src/Graph.tsx
+index 277797d..d887b34 100644
+--- a/src/Graph.tsx
++++ b/src/Graph.tsx
+@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
+     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+ 
+     const schema = {
+-      stock: 'string',
+-      top_ask_price: 'float',
+-      top_bid_price: 'float',
++      price_abc: 'float',
++      price_def: 'float',
++      ratio: 'float',
+       timestamp: 'date',
++      upper_bound: 'float',
++      lower_bound: 'float',
++      trigger_alert: 'float',
+     };
+ 
+     if (window.perspective && window.perspective.worker()) {
+@@ -36,25 +39,26 @@ class Graph extends Component<IProps, {}> {
+       // Load the `table` in the `<perspective-viewer>` DOM reference.
+       elem.load(this.table);
+       elem.setAttribute('view', 'y_line');
+-      elem.setAttribute('column-pivots', '["stock"]');
+       elem.setAttribute('row-pivots', '["timestamp"]');
+-      elem.setAttribute('columns', '["top_ask_price"]');
++      elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
+       elem.setAttribute('aggregates', JSON.stringify({
+-        stock: 'distinctcount',
+-        top_ask_price: 'avg',
+-        top_bid_price: 'avg',
++        price_abc: 'avg',
++        price_def: 'avg',
++        ratio: 'avg',
+         timestamp: 'distinct count',
++        upper_bound: 'avg',
++        lower_bound: 'avg',
++        trigger_alert: 'avg',
+       }));
+     }
+   }
+ 
+   componentDidUpdate() {
+-    if (this.table) {
+-      this.table.update(
+-        DataManipulator.generateRow(this.props.data),
+-      );
+-    }
++     if (this.table) {
++         this.table.update([
++            DataManipulator.generateRow(this.props.data),
++        ]);
++     }
+   }
+ }
+-
+ export default Graph;
+-- 
+2.25.1
+
diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index 5b7bf6c..cc01fe2 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -16,17 +16,17 @@ export class DataManipulator {
     const priceABC = (serverRespond[0].top_ask.price + serverRespond[0].top_bid.price) / 2;
     const priceDEF = (serverRespond[1].top_ask.price + serverRespond[1].top_bid.price) / 2;
     const ratio = priceABC / priceDEF;
-    const upperBound = 1 + 0.10;
-    const lowerBound = 1 - 0.10;
+    const upperBound = 1 + 0.05;
+    const lowerBound = 1 - 0.05;
     return {
-      price_abc: priceABC,
-      price_def: priceDEF,
-      ratio,
-      timestamp: serverRespond[0].timestamp > serverRespond[1].timestamp ?
-        serverRespond[0].timestamp : serverRespond[1].timestamp,
-      upper_bound: upperBound,
-      lower_bound: lowerBound,
-      trigger_alert: (ratio > upperBound || ratio < lowerBound) ? ratio : undefined,
+         price_abc: priceABC,
+         price_def: priceDEF,
+         ratio,
+         timestamp: serverRespond[0].timestamp > serverRespond[1].timestamp ?
+             serverRespond[0].timestamp : serverRespond[1].timestamp,
+         upper_bound: upperBound,
+         lower_bound: lowerBound,
+         trigger_alert: (ratio > upperBound || ratio < lowerBound) ? ratio : undefined,
     };
   }
 }
diff --git a/src/Graph.tsx b/src/Graph.tsx
index d887b34..5ad498f 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -1,5 +1,5 @@
 import React, { Component } from 'react';
-import { Table } from '@finos/perspective';
+import { Table, TableData } from '@finos/perspective';
 import { ServerRespond } from './DataStreamer';
 import { DataManipulator } from './DataManipulator';
 import './Graph.css';
@@ -23,13 +23,13 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      price_abc: 'float',
-      price_def: 'float',
-      ratio: 'float',
-      timestamp: 'date',
-      upper_bound: 'float',
-      lower_bound: 'float',
-      trigger_alert: 'float',
+        price_abc: 'float',
+        price_def: 'float',
+        ratio: 'float',
+        timestamp: 'date',
+        upper_bound: 'float',
+        lower_bound: 'float',
+        trigger_alert: 'float',
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -42,13 +42,13 @@ class Graph extends Component<IProps, {}> {
       elem.setAttribute('row-pivots', '["timestamp"]');
       elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
       elem.setAttribute('aggregates', JSON.stringify({
-        price_abc: 'avg',
-        price_def: 'avg',
-        ratio: 'avg',
-        timestamp: 'distinct count',
-        upper_bound: 'avg',
-        lower_bound: 'avg',
-        trigger_alert: 'avg',
+          price_abc: 'avg',
+          price_def: 'avg',
+          ratio: 'avg',
+          timestamp: 'distinct count',
+          upper_bound: 'avg',
+          lower_bound: 'avg',
+          trigger_alert: 'avg',
       }));
     }
   }
@@ -56,8 +56,8 @@ class Graph extends Component<IProps, {}> {
   componentDidUpdate() {
      if (this.table) {
          this.table.update([
-            DataManipulator.generateRow(this.props.data),
-        ]);
+             DataManipulator.generateRow(this.props.data),
+        ] as unknown as TableData);
      }
   }
 }
-- 
2.25.1

